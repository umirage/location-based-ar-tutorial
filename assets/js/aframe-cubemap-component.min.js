!function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var n={};t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,r){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("cubemap",{schema:{folder:{type:"string"},edgeLength:{type:"int",default:5e3},ext:{type:"string",default:"jpg"}},init:function(){const e=this.el,t=this.data;this.geometry=new THREE.BoxBufferGeometry(1,1,1);const n=THREE.ShaderLib.cube;this.material=new THREE.ShaderMaterial({fragmentShader:n.fragmentShader,vertexShader:n.vertexShader,uniforms:n.uniforms,depthWrite:!1,side:THREE.BackSide}).clone(),Object.defineProperty(this.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),this.material.uniforms.envMap.value=new THREE.Texture,this.loader=new THREE.CubeTextureLoader,this.mesh=new THREE.Mesh(this.geometry,this.material),this.mesh.scale.set(t.edgeLength,t.edgeLength,t.edgeLength),e.setObject3D("cubemap",this.mesh)},update:function(e){function t(e){if(s!==this.data.folder)return void e.dispose();o.applyColorCorrection(e);const t=this.material.uniforms.envMap.value;this.material.uniforms.envMap.value=e,t&&t.dispose(),n.emit("cubemapLoaded")}const n=this.el,r=this.data,o=n.sceneEl.systems.renderer;if(r.edgeLength!==e.edgeLength&&this.mesh.scale.set(r.edgeLength,r.edgeLength,r.edgeLength),r.ext!==e.ext||r.folder!==e.folder){var i;const s=r.folder;if(s&&"#"===s[0]){const a=document.querySelector(s);if(null===a)return void console.error("cubemap component given a selector to a non-existent asset:",s);i=a.srcs}else this.loader.setPath(s),i=["posx","negx","posy","negy","posz","negz"],i=i.map(function(e){return e+"."+r.ext});this.loader.load(i,t.bind(this))}},remove:function(){this.geometry.dispose(),this.material.uniforms.envMap.value.dispose(),this.material.dispose(),this.el.removeObject3D("cubemap")}})}]);